name: Build Ubuntu 22.04 (Iceoryx)

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build-ubuntu:
    runs-on: ubuntu-22.04

    steps:
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt-get install ninja-build libprotobuf-dev libprotoc-dev protobuf-compiler

    - name: Install Iceoryx
      run: |
        sudo apt-get install libacl1-dev libncurses5-dev pkg-config
        mkdir "${{ runner.workspace }}/iceoryx"
        cd "${{ runner.workspace }}/iceoryx"
        git clone https://github.com/eclipse/iceoryx.git
        cd iceoryx
        git checkout release_1.0
        ./tools/iceoryx_build_test.sh
        sudo mkdir /etc/iceoryx
        sudo cp ${{ runner.workspace }}/iceoryx/iceoryx/iceoryx_posh/etc/iceoryx/roudi_config_example.toml /etc/iceoryx/roudi_config.toml
        cd ${{ runner.workspace }}/iceoryx/iceoryx/build/install/prefix/bin
        ./RouDi &

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules:  'true'
        fetch-depth: 0

    - name: CMake
      run: |
        export CC=/usr/bin/gcc-11
        export CXX=/usr/bin/g++-11
        mkdir "${{ runner.workspace }}/_build"
        cd "${{ runner.workspace }}/_build"
        cmake $GITHUB_WORKSPACE -G "Ninja" \
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
        -DECAL_HAS_CAPNPROTO=OFF \
        -DECAL_BUILD_SAMPLES=ON \
        -DECAL_BUILD_TESTS=ON \
        -DECAL_LAYER_ICEORYX=ON \
        -DECAL_INSTALL_SAMPLE_SOURCES=OFF \
        -DECAL_JOIN_MULTICAST_TWICE=OFF \
        -DECAL_NPCAP_SUPPORT=OFF \
        -DECAL_THIRDPARTY_BUILD_CMAKE_FUNCTIONS=ON \
        -DECAL_THIRDPARTY_BUILD_PROTOBUF=OFF \
        -DECAL_THIRDPARTY_BUILD_GTEST=ON \
        -DECAL_THIRDPARTY_BUILD_RECYCLE=ON \
        -DECAL_THIRDPARTY_BUILD_TCP_PUBSUB=ON \
        -DCMAKE_PREFIX_PATH="${{ runner.workspace }}/iceoryx/iceoryx/build/install/prefix/lib/cmake/iceoryx_posh;${{ runner.workspace }}/iceoryx/iceoryx/build/install/prefix/lib/cmake/iceoryx_utils" \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_SYSCONFDIR=/etc \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LOCALSTATEDIR=/var \
        -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu
        sudo mkdir /etc/ecal
        sudo cp "$GITHUB_WORKSPACE/ecal/core/cfg/ecal.ini" /etc/ecal
      shell: bash

    - name: Build Release
      run: cmake --build . --config Release
      working-directory: ${{ runner.workspace }}/_build

#    - name: Run Tests
#      run: ctest -V
#      working-directory: ${{ runner.workspace }}/_build

    - name: Pack
      run: cpack -G DEB
      working-directory: ${{ runner.workspace }}/_build

    - name: Upload Debian
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-debian
        path: ${{ runner.workspace }}/_build/_deploy/*.deb
