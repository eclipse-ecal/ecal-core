; ========================= eCAL LICENSE =================================
;
; Copyright (C) 2016 - 2019 Continental Corporation
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;      http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; ========================= eCAL LICENSE =================================

; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define AppName                 "@CPACK_PACKAGE_NAME@"
#define AppVersion              "@CPACK_PACKAGE_VERSION_MAJOR@.@CPACK_PACKAGE_VERSION_MINOR@.@CPACK_PACKAGE_VERSION_PATCH@"
#define AppPublisher            "@CPACK_PACKAGE_VENDOR@"
#define AppDateTime             GetDateTimeString('yyyy-mm-dd', '', '');
#define OutputName              str("ecal-")+str(AppVersion)+str("-win64")
#define ComponentStagingDir     "@CPACK_TEMPORARY_INSTALL_DIRECTORY@"
#define DebugSdkStagingDir      StringChange(ComponentStagingDir, "/complete/", "/sdk/")
#define OutputDir               "@CPACK_PACKAGE_DIRECTORY@/@CPACK_OUTPUT_FILE_PREFIX@"
#define LicenseFile             "@CPACK_RESOURCE_FILE_LICENSE@"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
AppId={#AppName}
AppName={#AppName}
AppVersion={#AppVersion}
AppVerName={#AppName} {#AppVersion}
AppPublisher={#AppPublisher}
DefaultDirName={sd}\{#AppName}
DefaultGroupName={#AppName}
WizardImageFile=gfx\logo_iss.bmp
WizardSmallImageFile=gfx\logo_icon.bmp
OutputDir={#OutputDir}
OutputBaseFilename={#OutputName}
Compression=lzma2
SolidCompression=yes
ChangesAssociations=yes
PrivilegesRequired=admin
ArchitecturesInstallIn64BitMode=x64
ChangesEnvironment=true
VersionInfoVersion={#AppVersion}
LicenseFile={#LicenseFile}

[Components]
Name: runtime;        Description: "eCAL Runtime";                             Types: full compact custom; Flags: disablenouninstallwarning fixed
Name: samples;        Description: "Samples";                                  Types: full;                Flags: disablenouninstallwarning
Name: sdk;            Description: "SDK";                                      Types: full;
Name: sdk\ecal;       Description: "eCAL SDK";                                 Types: full;                Flags: disablenouninstallwarning
Name: sdk\protobuf;   Description: "Protobuf";                                 Types: full;                Flags: disablenouninstallwarning

[Tasks]
Name: "replaceconf";  Description: "Overwrite existing configuration";                                     Flags: checkedonce
Name: "modifypath";   Description: "Add application directory to your environmental path";                 Flags: checkedonce

[Files]
; runtime
Source: "{#ComponentStagingDir}\runtime\*";           DestDir: "{app}";      Flags: ignoreversion recursesubdirs; Components: runtime
Source: "{#ComponentStagingDir}\Unspecified\*";       DestDir: "{app}";      Flags: ignoreversion recursesubdirs; Components: runtime

Source: "{#ComponentStagingDir}\configuration\cfg\ecal.ini";     DestDir: "{commonappdata}\eCAL\"; Tasks: not replaceconf; Flags: ignoreversion confirmoverwrite; Components: runtime
Source: "{#ComponentStagingDir}\configuration\cfg\ecal.ini";     DestDir: "{commonappdata}\eCAL\"; Tasks: replaceconf;     Flags: ignoreversion;                  Components: runtime

; samples
Source: "{#ComponentStagingDir}\samples\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: samples

; sdk\ecal
;Source: "{#ComponentStagingDir}\headers\*";           DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal
Source: "{#ComponentStagingDir}\sdk\*";               DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

Source: "{#DebugSdkStagingDir}\runtime\*";            DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal
Source: "{#DebugSdkStagingDir}\Unspecified\*";        DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

Source: "{#DebugSdkStagingDir}\sdk\*";                DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\ecal

; sdk\protobuf
Source: "{#ComponentStagingDir}\libprotobuf\*";       DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\libprotobuf-lite\*";  DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\libprotoc\*";         DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protobuf-export\*";   DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protobuf-headers\*";  DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protobuf-protos\*";   DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#ComponentStagingDir}\protoc\*";            DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf

Source: "{#DebugSdkStagingDir}\libprotobuf\*";        DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#DebugSdkStagingDir}\libprotobuf-lite\*";   DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#DebugSdkStagingDir}\libprotoc\*";          DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf
Source: "{#DebugSdkStagingDir}\protobuf-export\*";    DestDir: "{app}";                   Flags: ignoreversion recursesubdirs;     Components: sdk\protobuf

[Icons]
Name: "{group}\Configuration\Edit ecal.ini";          Filename: "{commonappdata}\eCAL\ecal.ini";                   Components: runtime

Name: "{group}\{cm:UninstallProgram,{#AppName}}";     Filename: "{uninstallexe}"

[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: string; ValueName: "ECAL_HOME"; ValueData: "{app}";                Flags: uninsdeletevalue
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; ValueType: string; ValueName: "ECAL_DATA"; ValueData: "{commonappdata}\eCAL"; Flags: uninsdeletevalue

[Code]
// add eCAL to system path
const
  ModPathName = 'modifypath';
  ModPathType = 'system';

function ModPathDir(): TArrayOfString;
  begin
    setArrayLength(Result, 4);
    Result[0] := ExpandConstant('{app}\bin');
    Result[1] := ExpandConstant('{app}\samples\bin');
  end;
#include "modpath.iss"
